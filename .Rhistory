title(main = 'Series x Fit Plot',ylab= 'Values of the series',xlab = 'time')
#AR(1) diff one time
model <- Arima(ts, c(1,1,0))
plot(model$x, col='blue',main = 'Series x Fit Plot',ylab= 'Values of the series',xlab = 'time')
lines(model$fitted, col='red')
legend("topright",c("Series","Fit"),lty =1, col= c('red','blue'))
install.packages("forecast")
install.packages("tseries")
install.packages(curl)
install.packages("curl")
install.packages("forecast")
library(forecast)
install.packages(astsa)
install.packages('astsa')
set.seed(3)
ts3 <- arima.sim(list(order = c(1,1,1), ar = 0.7, ma = 0.5), n = 200)
model <- auto.arima(ts3)
model
model$var.coef
model$var.coef
(1-pnorm(abs(model$coef)/sqrt(diag(model$var.coef))))*2
model$coef
(1-pnorm(abs(model$coef[1])/sqrt(diag(model$var.coef[1]))))*2
(1-pnorm(abs(model$coef[1])/sqrt(diag(model$var.coef[1][1]))))*2
diag(model$var.coef)
model$var.coef
install.packages('lmtest')
library(lmtest)
coeftest(ar1)
knitr::opts_chunk$set(echo = TRUE)
plot(USAccDeaths,main = "Time series of the Number of Accidental Deaths in the US 1973-78")
require(forecast)
require(astsa)
plot(decompose(AirPassengers,type = "multiplicative"))
require(astsa)
set.seed(2)
ts <- arima.sim(list(order = c(1,1,0), ar = 0.7), n = 200)
#load very usefull library for time series analysis
library(forecast)
print(ts)
plot(ts, main = 'Time Series')
Acf(ts)
Pacf(ts)
ts_diff <- diff(ts)
plot(ts_diff)
Acf(ts_diff)
Pacf(ts_diff)
#AR(1) diff one time
model <- Arima(ts, c(1,1,0))
plot(model$x, col='blue',
main = 'Series x Fit Plot',
ylab= 'Values of the series',
xlab = 'time')
lines(model$fitted, col='red')
legend("topright",c("Series","Fit"),lty =1, col= c('red','blue'))
accuracy(model)
#checking residuals
tsdiag(model)
checkresiduals(model)
set.seed(3)
ts2 <- arima.sim(list(order = c(0,0,2), ma = c(0.8,0.7)), n = 200)
#load forecast package
library(forecast)
print(ts2)
plot(ts2, main = 'Time Series')
Acf(ts2)
Pacf(ts2)
#MA(2)
model <- Arima(ts2, c(0,0,2))
plot(model$x, col='blue',
main = 'Series x Fit Plot',
ylab= 'Values of the series',
xlab = 'time')
lines(model$fitted, col='red')
legend("topright",c("Series","Fit"),lty =1, col= c('red','blue'))
accuracy(model)
#checking residuals
tsdiag(model)
checkresiduals(model)
require(astsa)
set.seed(3)
ts3 <- arima.sim(list(order = c(1,1,1), ar = 0.7, ma = 0.5), n = 200)
#load very usefull library for time series analysis
library(forecast)
print(ts3)
plot(ts3, main = 'Time Series')
Acf(ts3)
Pacf(ts3)
ts3_diff <- diff(ts3)
plot(ts3_diff)
Acf(ts3_diff)
Pacf(ts3_diff)
ndiffs(ts3)
#d =1 to all models
#registering the ar and ma order, p and q
ar1 <- Arima(ts3,c(1,1,0))
ma1 <- Arima(ts3,c(0,1,1))
ar1ma1 <- Arima(ts3,c(1,1,1))
ar2 <- Arima(ts3,c(2,1,0))
ma2 <- Arima(ts3,c(0,1,2))
ar2ma1 <- Arima(ts3,c(2,1,1))
ar1ma2 <- Arima(ts3,c(1,1,2))
ar2ma2 <- Arima(ts3,c(2,1,2))
#package to calculate coeficient significances of a model
library(lmtest)
#models, d = 1 already accounted
#AR(1)
print(ar1)
coeftest(ar1)
#MA(1)
print(ma1)
coeftest(ma1)
#ARMA(1)
print(ar1ma1)
coeftest(ar1ma1)
#AR(2)
print(ar2)
coeftest(ar2)
#MA(2)
print(ma2)
coeftest(ma2)
#ARMA(2,1)
print(ar2ma1)
coeftest(ar2ma1)
#ARMA(1,2)
print(ar1ma2)
coeftest(ar1ma2)
#ARMA(2,2)
print(ar2ma2)
coeftest(ar2ma2)
checkresiduals(ar1)
checkresiduals(ma1)
checkresiduals(ar1ma1)
checkresiduals(ar2)
checkresiduals(ma2)
checkresiduals(ar1ma2)
checkresiduals(ar2ma2)
ar1ma1$
ar1ma1$aic
paste("AIC: ", ar1ma1$aic, ",", "BIC: ", ar1ma1$bic, ",", "AICc: ",ar1ma1$aicc ,sep = "")
paste("ARIMA(1,1,1) = ","AIC: ", ar1ma1$aic, ", ", "BIC: ", ar1ma1$bic, ", ", "AICc: ",ar1ma1$aicc ,sep = "")
?forecast
a <- forecast(ar1ma1, h =10)
a$model
a$method
a$level
a$lower
a$series
a$fitted
a$series
a$x
plot(a)
plot(ar1ma1)
?plot.Arima
?plot.forecast
a <- forecast(ar1ma1, h =10)
a$method
a$fitted
a$level
a$mean
#forecast 10 periods ahead
forecast_ar1ma1 <- forecast(ar1ma1, h = 10,level = 95)
#forecasted valued
forecast_ar1ma1$mean
#plotting result
plot(forecast_ar1ma1, shaded = FALSE)
knitr::opts_chunk$set(echo = TRUE)
plot(USAccDeaths,main = "Time series of the Number of Accidental Deaths in the US 1973-78")
require(forecast)
require(astsa)
plot(decompose(AirPassengers,type = "multiplicative"))
require(astsa)
set.seed(2)
ts <- arima.sim(list(order = c(1,1,0), ar = 0.7), n = 200)
#load very usefull library for time series analysis
library(forecast)
print(ts)
plot(ts, main = 'Time Series')
Acf(ts)
Pacf(ts)
ts_diff <- diff(ts)
plot(ts_diff)
Acf(ts_diff)
Pacf(ts_diff)
#AR(1) diff one time
model <- Arima(ts, c(1,1,0))
plot(model$x, col='blue',
main = 'Series x Fit Plot',
ylab= 'Values of the series',
xlab = 'time')
lines(model$fitted, col='red')
legend("topright",c("Series","Fit"),lty =1, col= c('red','blue'))
accuracy(model)
#checking residuals
tsdiag(model)
checkresiduals(model)
set.seed(3)
ts2 <- arima.sim(list(order = c(0,0,2), ma = c(0.8,0.7)), n = 200)
#load forecast package
library(forecast)
print(ts2)
plot(ts2, main = 'Time Series')
Acf(ts2)
Pacf(ts2)
#MA(2)
model <- Arima(ts2, c(0,0,2))
plot(model$x, col='blue',
main = 'Series x Fit Plot',
ylab= 'Values of the series',
xlab = 'time')
lines(model$fitted, col='red')
legend("topright",c("Series","Fit"),lty =1, col= c('red','blue'))
accuracy(model)
#checking residuals
tsdiag(model)
checkresiduals(model)
require(astsa)
set.seed(3)
ts3 <- arima.sim(list(order = c(1,1,1), ar = 0.7, ma = 0.5), n = 200)
#load very usefull library for time series analysis
library(forecast)
print(ts3)
plot(ts3, main = 'Time Series')
Acf(ts3)
Pacf(ts3)
ts3_diff <- diff(ts3)
plot(ts3_diff)
Acf(ts3_diff)
Pacf(ts3_diff)
ndiffs(ts3)
#d =1 to all models
#registering the ar and ma order, p and q
ar1 <- Arima(ts3,c(1,1,0))
ma1 <- Arima(ts3,c(0,1,1))
ar1ma1 <- Arima(ts3,c(1,1,1))
ar2 <- Arima(ts3,c(2,1,0))
ma2 <- Arima(ts3,c(0,1,2))
ar2ma1 <- Arima(ts3,c(2,1,1))
ar1ma2 <- Arima(ts3,c(1,1,2))
ar2ma2 <- Arima(ts3,c(2,1,2))
#package to calculate coeficient significances of a model
library(lmtest)
#models, d = 1 already accounted
#AR(1)
print(ar1)
coeftest(ar1)
#MA(1)
print(ma1)
coeftest(ma1)
#ARMA(1)
print(ar1ma1)
coeftest(ar1ma1)
#AR(2)
print(ar2)
coeftest(ar2)
#MA(2)
print(ma2)
coeftest(ma2)
#ARMA(2,1)
print(ar2ma1)
coeftest(ar2ma1)
#ARMA(1,2)
print(ar1ma2)
coeftest(ar1ma2)
#ARMA(2,2)
print(ar2ma2)
coeftest(ar2ma2)
checkresiduals(ar1)
checkresiduals(ma1)
checkresiduals(ar1ma1)
checkresiduals(ar2)
checkresiduals(ma2)
checkresiduals(ar1ma2)
checkresiduals(ar2ma2)
paste("ARIMA(1,1,1) = ","AIC: ", ar1ma1$aic, ", ", "BIC: ", ar1ma1$bic, ", ", "AICc: ",ar1ma1$aicc ,sep = "")
paste("ARIMA(2,1,0 = ","AIC: ", ar2$aic, ", ", "BIC: ", ar2$bic, ", ", "AICc: ",ar2$aicc ,sep = "")
paste("ARIMA(1,1,2) = ","AIC: ", ar1ma2$aic, ", ", "BIC: ", ar1ma2$bic, ", ", "AICc: ",ar1ma2$aicc ,sep = "")
paste("ARIMA(2,1,2) = ","AIC: ", ar2ma2$aic, ", ", "BIC: ", ar2ma2$bic, ", ", "AICc: ",ar2ma2$aicc ,sep = "")
#forecast 10 periods ahead, calculate 95% confidence intervals
forecast_ar1ma1 <- forecast(ar1ma1, h = 10,level = 95)
#forecasted valued
forecast_ar1ma1$mean
#plotting result
plot(forecast_ar1ma1, shaded = FALSE)
?tsCV
#cross validation of the ARIMA(1,1,1)
#create the forecast function to perform crossvalidation
forcastfun_ar1ma1 <- function(x,h){forecast(x, Arima(1,1,1), h = h)} # 5 step ahead forecast
error <- tsCV(ts3,forecast_ar1ma1,h = 5)
error
far2 <- function(x, h){forecast(Arima(x, order=c(2,0,0)), h=h)}
e <- tsCV(lynx, far2, h=1)
e
#cross validation of the ARIMA(1,1,1)
#create the forecast function to perform crossvalidation
forcastfun_ar1ma1 <- function(x, h){forecast(Arima(x, order=c(1,1,1)), h=h)}# 5 step ahead forecast
error <- tsCV(ts3,forecast_ar1ma1,h = 5)
error
far2 <- function(x, h){forecast(Arima(x, order=c(2,0,0)), h=h)}
forcastfun_ar1ma1 <- function(x, h){forecast(Arima(x, order=c(1,1,1)), h=h)}# 5 step ahead forecast
error <- tsCV(ts3,forecast_ar1ma1,h = 5)
error
?Arima
#cross validation of the ARIMA(1,1,1)
#create the forecast function to perform crossvalidation
forcastfun_ar1ma1 <- function(x, h){forecast(Arima(x, order=c(1,1,1)), h=h)}# 5 step ahead forecast
error <- tsCV(ts3,forecastfun_ar1ma1,h = 5)
error
#cross validation of the ARIMA(1,1,1)
#create the forecast function to perform crossvalidation
forcastfun_ar1ma1 <- function(x, h){forecast(Arima(x, order=c(1,1,1)), h=h)}# 5 step ahead forecast
error <- tsCV(ts3,forcastfun_ar1ma1,h = 5)
error
#cross validation of the ARIMA(1,1,1)
#create the forecast function to perform crossvalidation
forcastfun_ar1ma1 <- function(x, h){forecast(Arima(x, order=c(1,1,1)), h=h)}# 5 step ahead forecast
error <- tsCV(ts3,forcastfun_ar1ma1,h = 5)
mean(error)
#cross validation of the ARIMA(1,1,1)
#create the forecast function to perform crossvalidation
forcastfun_ar1ma1 <- function(x, h){forecast(Arima(x, order=c(1,1,1)), h=h)}# 5 step ahead forecast
error <- tsCV(ts3,forcastfun_ar1ma1,h = 5)
mean(error, na.rm = TRUE)
?tsCV
rmse
?rmse
#cross validation of the ARIMA(1,1,1)
#create the forecast function to perform crossvalidation
forcastfun_ar1ma1 <- function(x, h){forecast(Arima(x, order=c(1,1,1)), h=h)}# 5 step ahead forecast
#calculate the errors by crossvalidating on a rolling forecast origin with 5 step ahead forecast
e_ar1ma1 <- tsCV(ts3,forcastfun_ar1ma1,h = 5)
#rmse for the errors
sqrt(mean(e_ar1ma1^2, na.rm=TRUE))
knitr::opts_chunk$set(echo = TRUE)
USAccDeaths
?ts
library(forecast)
findfrequency(USAccDeaths)
?findfrequency
findfrequency(ts4)
knitr::opts_chunk$set(echo = TRUE)
plot(USAccDeaths,main = "Time series of the Number of Accidental Deaths in the US 1973-78")
require(forecast)
require(astsa)
plot(decompose(AirPassengers,type = "multiplicative"))
require(astsa)
set.seed(2)
ts <- arima.sim(list(order = c(1,1,0), ar = 0.7), n = 200)
#load very usefull library for time series analysis
library(forecast)
print(ts)
plot(ts, main = 'Time Series')
Acf(ts)
Pacf(ts)
ts_diff <- diff(ts)
plot(ts_diff)
Acf(ts_diff)
Pacf(ts_diff)
#AR(1) diff one time
model <- Arima(ts, c(1,1,0))
plot(model$x, col='blue',
main = 'Series x Fit Plot',
ylab= 'Values of the series',
xlab = 'time')
lines(model$fitted, col='red')
legend("topright",c("Series","Fit"),lty =1, col= c('red','blue'))
accuracy(model)
#checking residuals
tsdiag(model)
checkresiduals(model)
set.seed(3)
ts2 <- arima.sim(list(order = c(0,0,2), ma = c(0.8,0.7)), n = 200)
#load forecast package
library(forecast)
print(ts2)
plot(ts2, main = 'Time Series')
Acf(ts2)
Pacf(ts2)
#MA(2)
model <- Arima(ts2, c(0,0,2))
plot(model$x, col='blue',
main = 'Series x Fit Plot',
ylab= 'Values of the series',
xlab = 'time')
lines(model$fitted, col='red')
legend("topright",c("Series","Fit"),lty =1, col= c('red','blue'))
accuracy(model)
#checking residuals
tsdiag(model)
checkresiduals(model)
require(astsa)
set.seed(3)
ts3 <- arima.sim(list(order = c(1,1,1), ar = 0.7, ma = 0.5), n = 200)
#load very usefull library for time series analysis
library(forecast)
print(ts3)
plot(ts3, main = 'Time Series')
Acf(ts3)
Pacf(ts3)
ts3_diff <- diff(ts3)
plot(ts3_diff)
Acf(ts3_diff)
Pacf(ts3_diff)
ndiffs(ts3)
#d =1 to all models
#registering the ar and ma order, p and q
ar1 <- Arima(ts3,c(1,1,0))
ma1 <- Arima(ts3,c(0,1,1))
ar1ma1 <- Arima(ts3,c(1,1,1))
ar2 <- Arima(ts3,c(2,1,0))
ma2 <- Arima(ts3,c(0,1,2))
ar2ma1 <- Arima(ts3,c(2,1,1))
ar1ma2 <- Arima(ts3,c(1,1,2))
ar2ma2 <- Arima(ts3,c(2,1,2))
#package to calculate coeficient significances of a model
library(lmtest)
#models, d = 1 already accounted
#AR(1)
print(ar1)
coeftest(ar1)
#MA(1)
print(ma1)
coeftest(ma1)
#ARMA(1)
print(ar1ma1)
coeftest(ar1ma1)
#AR(2)
print(ar2)
coeftest(ar2)
#MA(2)
print(ma2)
coeftest(ma2)
#ARMA(2,1)
print(ar2ma1)
coeftest(ar2ma1)
#ARMA(1,2)
print(ar1ma2)
coeftest(ar1ma2)
#ARMA(2,2)
print(ar2ma2)
coeftest(ar2ma2)
checkresiduals(ar1)
checkresiduals(ma1)
checkresiduals(ar1ma1)
checkresiduals(ar2)
checkresiduals(ma2)
checkresiduals(ar1ma2)
checkresiduals(ar2ma2)
paste("ARIMA(1,1,1) = ","AIC: ", ar1ma1$aic, ", ", "BIC: ", ar1ma1$bic, ", ", "AICc: ",ar1ma1$aicc ,sep = "")
paste("ARIMA(2,1,0 = ","AIC: ", ar2$aic, ", ", "BIC: ", ar2$bic, ", ", "AICc: ",ar2$aicc ,sep = "")
paste("ARIMA(1,1,2) = ","AIC: ", ar1ma2$aic, ", ", "BIC: ", ar1ma2$bic, ", ", "AICc: ",ar1ma2$aicc ,sep = "")
paste("ARIMA(2,1,2) = ","AIC: ", ar2ma2$aic, ", ", "BIC: ", ar2ma2$bic, ", ", "AICc: ",ar2ma2$aicc ,sep = "")
#forecast 10 periods ahead, calculate 95% confidence intervals
forecast_ar1ma1 <- forecast(ar1ma1, h = 10,level = 95)
#forecasted valued
forecast_ar1ma1$mean
#plotting result
plot(forecast_ar1ma1, shaded = FALSE)
#cross validation of the ARIMA(1,1,1)
#create the forecast function to perform crossvalidation
forcastfun_ar1ma1 <- function(x, h){forecast(Arima(x, order=c(1,1,1)), h=h)}# 5 step ahead forecast
#calculate the errors by crossvalidating on a rolling forecast origin with 5 step ahead forecast
e_ar1ma1 <- tsCV(ts3,forcastfun_ar1ma1,h = 5)
#rmse for the errors
errorar1ma1 <- sqrt(mean(e_ar1ma1^2, na.rm=TRUE))
errorar1ma1
#cross validation of the ARIMA(2,1,0)
#create the forecast function to perform crossvalidation
forcastfun_ar2 <- function(x, h){forecast(Arima(x, order=c(2,1,0)), h=h)}# 5 step ahead forecast
#calculate the errors by crossvalidating on a rolling forecast origin with 5 step ahead forecast
e_ar2 <- tsCV(ts3,forcastfun_ar2,h = 5)
#rmse for the errors
errorar2 <- sqrt(mean(e_ar2^2, na.rm=TRUE))
errorar2
#cross validation of the ARIMA(1,1,2)
#create the forecast function to perform crossvalidation
forcastfun_ar1ma2 <- function(x, h){forecast(Arima(x, order=c(1,1,2)), h=h)}# 5 step ahead forecast
#calculate the errors by crossvalidating on a rolling forecast origin with 5 step ahead forecast
e_ar1ma2 <- tsCV(ts3,forcastfun_ar1ma2,h = 5)
#rmse for the errors
errorar1ma2 <- sqrt(mean(e_ar1ma2^2, na.rm=TRUE))
errorar1ma2
#cross validation of the ARIMA(2,1,2)
#create the forecast function to perform crossvalidation
forcastfun_ar2ma2 <- function(x, h){forecast(Arima(x, order=c(2,1,2)), h=h)}# 5 step ahead forecast
#calculate the errors by crossvalidating on a rolling forecast origin with 5 step ahead forecast
e_ar2ma2 <- tsCV(ts3,forcastfun_ar2ma2,h = 5)
#rmse for the errors
errorar2ma2 <- sqrt(mean(e_ar2ma2^2, na.rm=TRUE))
errorar2ma2
ts4 = as.numeric(USAccDeaths)
library(forecast)
print(ts4)
library(forecast)
#frequency = 12 since it is monthly data
ts4 = ts(ts4, frequency = 12,start = c(1973,1))
print(ts4)
plot(ts4, main = "Number of accidental deaths in the US for the period of 1973 to 1978")
Acf(ts4)
Pacf(ts4)
findfrequency(ts4)
diff12_ts4 <- diff(ts4,12)
plot(diff12_ts4)
Acf(diff12_ts4)
Pacf(diff12_ts4)
ndiffs(diff12_ts4)
alldiffs_ts4 <- diff(diff12_ts4)
plot(alldiffs_ts4)
Acf(alldiffs_ts4)
Pacf(alldiffs_ts4)
model <- auto.arima(USAccDeaths)
model
